#!/bin/bash
#
# Create backup



# Variables
current_date=$(date +%d_%m_%y-%H_%M_%S)


# Run hook scripts (if defined)
borg_hook_general_exit_status=0
{% for borgbackup_client_hook in borgbackup_client_hooks %}
echo "EXECUTING HOOK: {{ borgbackup_client_hook }}" >> /var/log/borgbackup/${current_date}.log

/etc/borgbackup/hooks/{{ borgbackup_client_hook }} 2>&1 >> /var/log/borgbackup/${current_date}.log 2>&1

borg_hook_exit_status_{{ borgbackup_client_hook | replace('.', '_') | replace'-', '_') }}=$?

echo borg_hook_exit_status_{{ borgbackup_client_hook }} $borg_hook_exit_status_{{ borgbackup_client_hook }} > /var/lib/prometheus-node-textfile-collector/logs/borg_hook_exit_status.prom

if [[ "$borg_hook_exit_status" != "0" ]]; then
    borg_hook_general_exit_status="$borg_hook_exit_status"
fi

{% endfor %}


# Run backup
source /root/.bashrc.d/borgbackup.sh
echo -e "\n\nBACKUP START $(date +%d_%m_%y-%H_%M_%S)\n" >> /var/log/borgbackup/${current_date}.log
borg create \
    --verbose \
    --stats \
    --exclude-caches \
    --exclude /mnt \
    --exclude /media \
    --exclude /tmp \
    --exclude /proc \
    --exclude /sys \
    --exclude /var/lib/mysql \
    --exclude /var/lib/postgresql \
    --exclude /var/lib/libvirt/images \
    --exclude /home/borgbackup/archives \
{% for borgbackup_client_exclude_path in borgbackup_client_exclude_paths %}
    --exclude {{ borgbackup_client_exclude_path }} \
{% endfor %}
    --exclude "*.journal" \
    --exclude "*.fsck" \
    --exclude "*.lost+found" \
    ssh://borgbackup@{{ borgbackup_client_server_hostname }}/home/borgbackup/archives/{{ inventory_hostname }}::$current_date \
    / \
    >> /var/log/borgbackup/${current_date}.log 2>&1

borg_backup_exit_status=$?
echo -e "\n\nBACKUP END $(date +%d_%m_%y-%H_%M_%S)\n\n" >> /var/log/borgbackup/${current_date}.log

echo borg_backup_exit_status $borg_backup_exit_status > /var/lib/prometheus-node-textfile-collector/logs/borg_backup_exit_status.prom

if [[ "$borg_backup_exit_status" == "0" ]]; then
    echo borg_last_successful_backup $(date "+%s") > /var/lib/prometheus-node-textfile-collector/logs/borg_backup.prom
fi

# send message to monitoring if there is a problem
if [[ "$borg_backup_exit_status" != "0" ]] || [[ "$borg_hook_general_exit_status" != "0" ]]; then
    cat /var/log/borgbackup/${current_date}.log
fi






